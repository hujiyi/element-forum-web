{"version":3,"sources":["webpack:///./src/views/home/components/LatestTopic.vue?b2f2","webpack:///src/views/home/components/LatestTopic.vue","webpack:///./src/views/home/components/LatestTopic.vue?c71b","webpack:///./src/views/home/components/LatestTopic.vue","webpack:///./src/views/home/components/LatestTopic.vue?ac02","webpack:///./src/model/topic.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","style","color","attrs","staticStyle","name","params","id","item","_v","_s","title","description","topices","length","_e","_l","index","key","_f","createdAt","staticRenderFns","component","Topic","content","views","reply","level","getCategory","label","get","value","getUser","user","username","email","prototype","formJson","category","updatedAt","createdBy","lastEditor"],"mappings":"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","file":"js/chunk-7c132e7e.763da36b.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"board-border p-4\",style:((\"border-left-color: \" + _vm.color + \";\"))},[_c('el-row',[_c('el-col',{attrs:{\"md\":10,\"sm\":24}},[_c('p',{staticClass:\"board-title\"},[_c('router-link',{staticStyle:{\"text-decoration\":\"none\"},attrs:{\"to\":{ name: 'Board', params: { id: _vm.item.id } }}},[_vm._v(\" \"+_vm._s(_vm.item.title)+\" \")])],1),_c('p',{staticClass:\"board-description\"},[_vm._v(_vm._s(_vm.item.description))])]),_c('el-col',{staticClass:\"hidden-sm-and-down\",attrs:{\"md\":14}},[(_vm.topices.length === 0)?_c('span',[_vm._v(\"当前版块无内容，请添加话题。\")]):_vm._e(),_vm._l((_vm.topices),function(item,index){return _c('div',{key:index},[_c('div',{staticClass:\"horiz-container m-1\"},[_c('router-link',{attrs:{\"to\":{ name: 'Topic', params: { id: item.id } }}},[_c('el-link',{attrs:{\"underline\":false,\"type\":\"primary\"}},[_vm._v(_vm._s(item.title))])],1),_c('span',{staticClass:\"spacer\"}),_c('span',{staticClass:\"created-time\"},[_vm._v(_vm._s(_vm._f(\"datetimeFormat\")(item.createdAt)))])],1)])})],2)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div class=\"board-border p-4\" :style=\"`border-left-color: ${color};`\">\r\n        <el-row>\r\n            <el-col :md=\"10\" :sm=\"24\">\r\n                <p class=\"board-title\">\r\n                    <router-link :to=\"{ name: 'Board', params: { id: item.id } }\" style=\" text-decoration: none;\">\r\n                        {{ item.title }}\r\n                    </router-link>\r\n                </p>\r\n                <p class=\"board-description\">{{ item.description }}</p>\r\n            </el-col>\r\n            <el-col :md=\"14\" class=\"hidden-sm-and-down\">\r\n                <span v-if=\"topices.length === 0\">当前版块无内容，请添加话题。</span>\r\n                <div v-for=\"(item, index) in topices\" :key=\"index\">\r\n                    <div class=\"horiz-container m-1\">\r\n                        <router-link :to=\"{ name: 'Topic', params: { id: item.id } }\">\r\n                            <el-link :underline=\"false\" type=\"primary\">{{ item.title }}</el-link>\r\n                        </router-link>\r\n\r\n                        <span class=\"spacer\"></span>\r\n                        <span class=\"created-time\">{{ item.createdAt | datetimeFormat }}</span>\r\n                    </div>\r\n                </div>\r\n            </el-col>\r\n        </el-row>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport TopicService from '../../../api/service/topic_service';\r\nimport Topic from '../../../model/topic';\r\nimport moment from 'moment';\r\nexport default {\r\n    name: 'LatestTopic',\r\n    props: ['item', 'color'],   // item: 外部传入的 版块 值, color: 外部传入的 左则粗边框颜色\r\n    data: () => ({\r\n        topices: [],\r\n        pageSize: 8,\r\n    }),\r\n    mounted() {\r\n        this.getTopices();\r\n    },\r\n    methods: {\r\n        async getTopices() {\r\n            this.topices = [];\r\n            let response = await TopicService.getTopicByCategory(this.item.id);\r\n            this.topices = response.map(item => { return new Topic().formJson(item) });\r\n        }\r\n    },\r\n\r\n    // 过滤器\r\n    filters: {\r\n        // 使用 moment.js 定义日期时间过滤器函数\r\n        datetimeFormat(val) {\r\n            return moment(val).fromNow();;\r\n        },\r\n    },\r\n\r\n}\r\n</script>\r\n\r\n<style>\r\n.board-border {\r\n    border-left-style: solid;\r\n    border-left-width: 12px;\r\n    border-bottom-style: solid;\r\n    border-bottom-width: 1px;\r\n    border-bottom-color: #c0c4cc;\r\n    border-top-style: solid;\r\n    border-top-width: 1px;\r\n    border-top-color: #c0c4cc;\r\n    /* margin-bottom: -1px; 用于解决div边框重叠 */\r\n    margin-bottom: -1px;\r\n}\r\n\r\n.board-title {\r\n    font-size: 18px;\r\n    font-weight: bold;\r\n   \r\n}\r\n\r\n.board-description {\r\n    font-size: 14px;\r\n    color: #919191;\r\n}\r\n\r\n.created-time {\r\n    color: #919191;\r\n    font-size: 14px;\r\n}\r\n</style>","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./LatestTopic.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./LatestTopic.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./LatestTopic.vue?vue&type=template&id=bcf0c97c&\"\nimport script from \"./LatestTopic.vue?vue&type=script&lang=js&\"\nexport * from \"./LatestTopic.vue?vue&type=script&lang=js&\"\nimport style0 from \"./LatestTopic.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./LatestTopic.vue?vue&type=style&index=0&lang=css&\"","class Topic {\r\n    constructor(title = '', content = '') {\r\n        this.title = title;\r\n        this.content = content;\r\n        this.views = 0;\r\n        this.reply = 0;\r\n        this.level = 0;\r\n    }\r\n}\r\n\r\nTopic.prototype.formJson = function (item) {\r\n    return {\r\n        id: item.id,\r\n        category: item.get('category')\r\n            ? getCategory(item.get('category'))\r\n            : '',\r\n        title: item.get('title'),\r\n        content: item.get('content'),\r\n        views: item.get('views'),\r\n        reply: item.get('reply'),\r\n        level: item.get('level'),\r\n        createdAt: item.createdAt,\r\n        updatedAt: item.updatedAt,\r\n        createdBy: item.get(\"createdBy\")\r\n            ? getUser(item.get(\"createdBy\"))\r\n            : \"\",\r\n        lastEditor: item.get(\"lastEditor\")\r\n            ? getUser(item.get(\"lastEditor\"))\r\n            : \"\",\r\n    }\r\n}\r\n\r\n// 版块, 此处数据适用于下拉框\r\nfunction getCategory(item) {\r\n    return {\r\n        label: item.get('title'),\r\n        value: item.id,\r\n    }\r\n}\r\n\r\n// 获取用户表中各个字段的值\r\nfunction getUser(user) {\r\n    // console.log(user);\r\n    return {\r\n        id: user.id,\r\n        username: user.get(\"username\"),\r\n        email: user.get(\"email\"),\r\n    };\r\n}\r\nexport default Topic;"],"sourceRoot":""}