{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack:///./src/views/account/pages/PasswordReset.vue?f2a8","webpack:///src/views/account/pages/PasswordReset.vue","webpack:///./src/views/account/pages/PasswordReset.vue?cb57","webpack:///./src/views/account/pages/PasswordReset.vue","webpack:///./src/views/account/pages/PasswordReset.vue?95eb","webpack:///./src/api/service/account_service.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","_v","model","value","callback","$$v","email","expression","on","passwordReset","staticRenderFns","title","message","showClose","errorMsg","response","component","AccountService","username","password","user","LC","User","setUsername","setPassword","set","setEmail","signUp","console","log","code","logIn","logOut","requestPasswordReset","current","getSessionToken"],"mappings":"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","file":"js/chunk-79c95623.a2483c72.js","sourcesContent":["export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('el-card',{staticClass:\"reset-module\",attrs:{\"shadow\":\"always\"}},[_c('el-form',[_c('div',{staticClass:\"horiz-container form-title\"},[_c('span',[_vm._v(\"通过邮箱重置密码\")]),_c('div',{staticClass:\"spacer\"}),_c('router-link',{attrs:{\"to\":\"/\"}},[_c('i',{staticClass:\"fa fa-home fa-2x\"})])],1),(_vm.sendEmailSuccess)?_c('div',[_c('el-alert',{attrs:{\"title\":(\"请登录 \" + (this.email) + \" 邮箱进行密码重置\"),\"type\":\"success\",\"effect\":\"dark\",\"center\":\"\",\"show-icon\":\"\",\"closable\":false}})],1):_c('div',[_c('el-form-item',[_c('el-input',{attrs:{\"type\":\"text\",\"prefix-icon\":\"fa fa-envelope-o\",\"placeholder\":\"电子邮箱\"},model:{value:(_vm.email),callback:function ($$v) {_vm.email=$$v},expression:\"email\"}})],1),_c('el-form-item',[_c('el-button',{staticClass:\"full-width\",attrs:{\"type\":\"primary\"},on:{\"click\":_vm.passwordReset}},[_vm._v(\"发送邮件重置密码\")])],1),_c('div',{staticClass:\"horiz-container\"},[_c('div',{staticClass:\"spacer\"}),_c('router-link',{staticClass:\"mx-2\",attrs:{\"to\":\"/login\"}},[_c('el-link',{attrs:{\"underline\":false,\"type\":\"success\"}},[_vm._v(\"使用已有账号登录\")])],1),_c('router-link',{staticClass:\"mx-2\",attrs:{\"to\":\"/signup\"}},[_c('el-link',{attrs:{\"underline\":false,\"type\":\"danger\"}},[_vm._v(\"没有账号\")])],1)],1)],1)])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <el-card shadow=\"always\" class=\"reset-module\">\r\n        <el-form>\r\n            <div class=\"horiz-container form-title\">\r\n                <span>通过邮箱重置密码</span>\r\n                <div class=\"spacer\"></div>\r\n                <router-link to=\"/\">\r\n                    <i class=\"fa fa-home fa-2x\"></i>\r\n                </router-link>\r\n            </div>\r\n            <div v-if=\"sendEmailSuccess\">\r\n                <el-alert\r\n                    :title=\"`请登录 ${this.email} 邮箱进行密码重置`\"\r\n                    type=\"success\"\r\n                    effect=\"dark\"\r\n                    center\r\n                    show-icon\r\n                    :closable=\"false\"\r\n                ></el-alert>\r\n            </div>\r\n            <div v-else>\r\n                <el-form-item>\r\n                    <el-input\r\n                        type=\"text\"\r\n                        prefix-icon=\"fa fa-envelope-o\"\r\n                        v-model=\"email\"\r\n                        placeholder=\"电子邮箱\"\r\n                    ></el-input>\r\n                </el-form-item>\r\n\r\n                <el-form-item>\r\n                    <el-button class=\"full-width\" type=\"primary\" @click=\"passwordReset\">发送邮件重置密码</el-button>\r\n                </el-form-item>\r\n                <div class=\"horiz-container\">\r\n                    <div class=\"spacer\"></div>\r\n                    <router-link to=\"/login\" class=\"mx-2\">\r\n                        <el-link :underline=\"false\" type=\"success\">使用已有账号登录</el-link>\r\n                    </router-link>\r\n                    <router-link to=\"/signup\" class=\"mx-2\">\r\n                        <el-link :underline=\"false\" type=\"danger\">没有账号</el-link>\r\n                    </router-link>\r\n                </div>\r\n            </div>\r\n        </el-form>\r\n    </el-card>\r\n</template>\r\n\r\n<script>\r\nimport AccountService from \"@/api/service/account_service\";\r\nexport default {\r\n    name: 'PasswordReset',\r\n    data: () => ({\r\n        email: '',\r\n        sendEmailSuccess: false,\r\n    }),\r\n    methods: {\r\n        async passwordReset() {\r\n            let email = this.email.trim();\r\n            // 发送重置密码邮件后，返回值为 字符类型的状态码\r\n            let response = await AccountService.passwordResetByEmail(email);\r\n            if (response == \"200\") {\r\n                this.sendEmailSuccess = true;\r\n                // 显示发送成功的提示信息\r\n                this.$notify.success({\r\n                    title: '发送重置密码邮件成功',             // 标题\r\n                    message: \"请查看邮件，以便完成密码重置\",    // 消息内容\r\n                    // offset: 100,                          // 偏移量，消息距屏幕边缘偏移一段距离\r\n                    showClose: false,                        // 不显示关闭按钮，只能等自动关闭\r\n                });\r\n\r\n            } else {\r\n                let errorMsg = {\r\n                    \"1\": \"请不要往同一个邮件地址发送太多邮件\",\r\n                    \"205\": \"此电子邮箱没有被注册使用\",\r\n                    \"-1\": \"请求被终止，请检查网络连接状况\"\r\n                };\r\n                // 使用 Notification 通知 显示操作失败的的提示信息\r\n                this.$notify.error({\r\n                    title: '密码重置失败',           // 标题\r\n                    message: errorMsg[response],    // 消息内容\r\n                    // offset: 100,                 // 偏移量，消息距屏幕边缘偏移一段距离\r\n                    showClose: false,               // 不显示关闭按钮，只能等自动关闭\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n</script>\r\n\r\n<style>\r\n.reset-module {\r\n    width: 380px;\r\n}\r\n</style>","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PasswordReset.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PasswordReset.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./PasswordReset.vue?vue&type=template&id=e504d736&\"\nimport script from \"./PasswordReset.vue?vue&type=script&lang=js&\"\nexport * from \"./PasswordReset.vue?vue&type=script&lang=js&\"\nimport style0 from \"./PasswordReset.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PasswordReset.vue?vue&type=style&index=0&lang=css&\"","import LC from 'leancloud-storage';  // 导入 leancloud 数据存储模块\r\n\r\n/**\r\n * 账号管理的类\r\n */\r\nclass AccountService {\r\n\r\n    /**\r\n     * 注册新用户账号\r\n     * @param {*} username \r\n     * @param {*} password \r\n     * @param {*} email \r\n     * @returns 注册返回的状态码： 202: \"用户名已被注册\", 203: \"邮箱已被注册\", \"-1\": \"无法连接到服务器\"\r\n     * \r\n     */\r\n    async signUp(username, password, email = '') {\r\n        try {\r\n            let user = new LC.User();\r\n            user.setUsername(username);\r\n            user.setPassword(password);\r\n            // 添加一个 昵称 字段，默认为用户名\r\n            user.set('nickname', username);\r\n            if (email) {\r\n                user.setEmail(email);\r\n            }\r\n            let response = await user.signUp();\r\n            console.log('注册账号成功：', response);\r\n            return {\r\n                \"status_code\": \"200\",   // 注册状态码\r\n                \"user\": response,    // 用户\r\n            };\r\n        } catch (e) {\r\n            console.log('注册账号失败：', e.code, e);\r\n            return {\r\n                // 注册返回的状态码： 202: \"用户名已被注册\", 203: \"邮箱已被注册\", \"-1\": \"无法连接到服务器\"\r\n                \"status_code\": e.code,   // 注册状态码\r\n                \"user\": null,    // 注册失败，返回用户为 null\r\n            };\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * 用户登录 \r\n     * @param {*} username \r\n     * @param {*} password \r\n     * @returns  登录状态代码 和用户\r\n     *  200: 登录成功\r\n     *  210: 密码错误； \r\n     *  211：用户不存在, \r\n     *  219: 重试次数太多\r\n     *  -1 : 请求被终止，一般是网络有问题\r\n     */\r\n    async logIn(username, password) {\r\n        try {\r\n            let user = await LC.User.logIn(username, password);\r\n            if (user) {\r\n                console.log('登录成功:', user);\r\n                return {\r\n                    \"status_code\": \"200\",   // 登录状态码\r\n                    \"user\": user,    // 用户\r\n                };\r\n            }\r\n        } catch (e) {\r\n            // e.code\r\n            // 210: 密码错误； \r\n            //  211：用户不存在, \r\n            //  -1 Error: Request has been terminated\r\n            console.log('登录失败：', e.code, e);\r\n            return {\r\n                \"status_code\": e.code,\r\n                \"user\": null,\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * 退出登录 \r\n     * @returns 无返回值\r\n     */\r\n    async logOut() {\r\n        return LC.User.logOut();\r\n    }\r\n\r\n    /**\r\n     * 通过电子邮件重置密码\r\n     * @param {*} email \r\n     * @returns 状态码：\r\n     * \"200\": 发送邮件成功；\r\n     * \"1\": \"请不要往同一个邮件地址发送太多邮件\",\r\n     * \"205\": \"此电子邮箱没有被注册使用\",\r\n     * \"-1\": \"请求被终止，请检查网络连接状况\"\r\n     */\r\n    async passwordResetByEmail(email) {\r\n        try {\r\n            let response = await LC.User.requestPasswordReset(email);\r\n            console.log(response.code, typeof response);\r\n            return \"200\";            \r\n        } catch (e) {\r\n            console.log(\"发送邮件：\", e.code, e);\r\n            return e.code      // 发送邮件不成功，返回错误代码\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取当前用户的 session token\r\n     * @returns session token\r\n     */\r\n    async getToken(){\r\n        return LC.User.current().getSessionToken();\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default new AccountService();"],"sourceRoot":""}